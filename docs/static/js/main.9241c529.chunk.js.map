{"version":3,"sources":["components/services/Api.js","images/logo.png","components/header/WelcomeBtn.js","components/header/Header.js","components/ResetButton.js","components/filters/FilterInput.js","components/filters/FilterSpecies.js","components/filters/FilterPlanets.js","components/filters/Filters.js","images/Loading2.gif","components/Loading.js","components/characters/CharacterCard.js","images/oops.gif","components/characters/NotFoundCharacter.js","components/characters/CharacterList.js","images/CatNoWay.gif","components/Footer.js","components/characters/CharacterDetail.js","components/services/localStorage.js","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","image","name","specie","species","planet","location","status","gender","episodes","episode","WelcomeBtn","props","className","onClick","handleBtn","Header","src","logo","alt","ResetButton","handleReset","FilterInput","htmlFor","type","placeholder","onChange","ev","handleFilter","key","value","target","toUpperCase","FilterSpecies","FilterPlanets","handleChange","planetsList","planetOptions","index","checked","planets","includes","Filters","onSubmit","preventDefault","Loading","loading","CharacterCard","to","characterInfo","NotFoundCharacter","imageOops","CharacterList","charactersList","charactersInfo","card","length","Footer","href","rel","CharacterDetail","undefined","localStorageData","localStorage","getItem","JSON","parse","setItem","stringify","App","useState","setData","setLoading","setName","setSpecie","setPlanets","showFilters","setShowFilters","useEffect","inputChange","indexPlanet","indexOf","newPlanets","splice","filteredCharacters","filter","sort","characterA","characterB","getPlanetOptions","planetsArray","Set","Array","from","exact","path","render","clickedCharacter","parseInt","match","params","foundCharacter","find","ReactDOM","document","getElementById"],"mappings":"sdAoBeA,G,MAnBQ,WACrB,OAAOC,MAAM,wCACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,EAAKC,QAAQC,KAAI,SAACC,GACvB,MAAO,CACLC,GAAID,EAAUC,GACdC,MAAOF,EAAUE,MACjBC,KAAMH,EAAUG,KAChBC,OAAQJ,EAAUK,QAClBC,OAAQN,EAAUO,SAASJ,KAC3BK,OAAQR,EAAUQ,OAClBC,OAAQT,EAAUS,OAClBC,SAAUV,EAAUW,iB,cCdf,G,MAAA,IAA0B,kC,eCiB1BC,EAfI,SAACC,GAMlB,OACE,wBACEC,UAAU,kEACVC,QAPc,WAChBF,EAAMG,aAIN,8BCaWC,EAZA,SAACJ,GACd,OACE,yBAAQC,UAAU,SAAlB,UACE,qBACEI,IAAKC,EACLL,UAAU,uCACVM,IAAI,wBAEN,cAAC,EAAD,CAAYJ,UAAWH,EAAMG,gBCDpBK,G,kBAbK,SAACR,GAKnB,OACE,sBACEC,UAAU,gFACVC,QANgB,WAClBF,EAAMS,mBC+BKC,EA5BK,SAACV,GASnB,OACE,wBAAOC,UAAU,cAAcU,QAAQ,cAAvC,UACE,cAAC,EAAD,CAAaF,YAAaT,EAAMS,cAChC,uBACER,UAAU,cACVW,KAAK,OACLtB,KAAK,cACLF,GAAG,cACHyB,YAAY,yBACZC,SAhBe,SAACC,GACpBf,EAAMgB,aAAa,CACjBC,IAAK,OACLC,MAAOH,EAAGI,OAAOD,MAAME,iBAcrBF,MAAOlB,EAAMV,WCQN+B,G,MA/BO,SAACrB,GAQrB,OACE,qCACE,uBAAOC,UAAU,gBAAjB,sBACA,yBACEA,UAAU,gBACVX,KAAK,SACLF,GAAG,SACH0B,SAbe,SAACC,GACpBf,EAAMgB,aAAa,CACjBC,IAAK,SACLC,MAAOH,EAAGI,OAAOD,SAWfA,MAAOlB,EAAMT,OALf,UAOE,wBAAQ2B,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,2BCwBOI,G,MA3CO,SAACtB,GAErB,IAAMuB,EAAe,SAACR,GACpBf,EAAMgB,aAAa,CACjBC,IAAK,SACLC,MAAOH,EAAGI,OAAOD,SAKfM,EAAcxB,EAAMyB,cAAcvC,KAAI,SAACO,EAAQiC,GACnD,OACE,oBAAgBzB,UAAU,WAA1B,SACE,wBAAOA,UAAU,aAAjB,UACE,uBACEA,UAAU,aACVW,KAAK,WACLtB,KAAK,SACL4B,MAAOzB,EACPkC,QAAS3B,EAAM4B,QAAQC,SAASpC,GAChCqB,SAAUS,IAEX9B,MAVIiC,MAiBb,OACE,2BAAUzB,UAAU,iBAApB,UACE,uBAAOA,UAAU,aAAaU,QAAQ,SAAtC,yCAGA,oBAAIV,UAAU,aAAd,SAA4BuB,SCWnBM,EAxCC,SAAC9B,GAMf,OACE,yBAASC,UAAU,2DAAnB,SACE,uBAAM8B,SANW,SAAChB,GACpBA,EAAGiB,kBAK6B/B,UAAU,gBAAxC,UACE,2BAAUA,UAAU,yBAApB,UACE,cAAC,EAAD,CACEe,aAAchB,EAAMgB,aACpBP,YAAaT,EAAMS,YACnBnB,KAAMU,EAAMV,OAEd,cAAC,EAAD,CACE0B,aAAchB,EAAMgB,aACpBzB,OAAQS,EAAMT,YAGlB,cAAC,EAAD,CACEyB,aAAchB,EAAMgB,aACpBS,cAAezB,EAAMyB,cACrBG,QAAS5B,EAAM4B,gBCnCV,G,MAAA,IAA0B,sCCmB1BK,EAZC,SAACjC,GACf,OAAIA,EAAMkC,QAEN,qBAAKjC,UAAU,UAAf,SACE,qBAAKA,UAAU,aAAaI,IAAKhB,EAAOkB,IAAI,mBAIzC,M,qBC8CI4B,EAnDO,SAACnC,GAYrB,OACE,6BAEE,eAAC,IAAD,CAAMC,UAAU,YAAYmC,GAAE,qBAAgBpC,EAAMqC,cAAcjD,IAAlE,UACE,qBAAKa,UAAU,sBAAf,SACE,qBACEA,UAAU,YACVI,IAAKL,EAAMqC,cAAchD,MACzBkB,IAAG,UAAKP,EAAMqC,cAAc/C,KAAzB,mBAGP,sBAAKW,UAAU,aAAf,UACE,oBAAIA,UAAU,mBAAd,SAAkCD,EAAMqC,cAAc/C,OACtD,oBAAGW,UAAU,wBAAb,UACGD,EAAMqC,cAAc9C,OACrB,sBAAMU,UAAU,wBAAhB,SACE,mBACEA,UAAS,kDA1Bc,UAA/BD,EAAMqC,cAAc1C,OACf,kCACiC,SAA/BK,EAAMqC,cAAc1C,OACtB,0BAEA,0CAyBH,mBAAGM,UAAU,wBAAb,SAAsCD,EAAMqC,cAAczC,kBC3CrD,G,MAAA,IAA0B,kCCoB1B0C,EAXW,WACxB,OACE,qBAAIrC,UAAU,QAAd,UACE,qBAAKI,IAAKkC,EAAWtC,UAAU,sBAAsBM,IAAI,SACzD,mBAAGN,UAAU,cAAb,wFC2BSuC,EA7BO,SAACxC,GAErB,IAAMyC,EAAiBzC,EAAM0C,eAAexD,KAAI,SAACyD,GAC/C,OACE,cAAC,EAAD,CACE1C,UAAU,gBAEVoC,cAAeM,GADVA,EAAKvD,OAMhB,OAA8B,IAA1BqD,EAAeG,OACV,cAAC,EAAD,IAGP,sBAAM3C,UAAU,YAAhB,SACE,oBAAIA,UAAU,mDAAd,SACGwC,OC7BM,G,MAAA,IAA0B,sCCwB1BI,G,MApBA,WACb,OACE,yBAAS5C,UAAU,SAAnB,SACE,mBACEA,UAAU,GACV6C,KAAK,iCACL3B,OAAO,SACP4B,IAAI,aAJN,SAME,qBAAI9C,UAAU,8DAAd,mCAEE,+BACE,mBAAGA,UAAU,kBAHjB,oBCyFO+C,EApFS,SAAChD,GAEvB,YAA4BiD,IAAxBjD,EAAMqC,cAEN,qBAAKpC,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,uDAAf,UACE,wBAAQA,UAAU,gBAAlB,SACE,cAAC,IAAD,CAAMmC,GAAG,IAAT,SACE,sBAAMnC,UAAU,uGAGpB,sBAAKA,UAAU,qBAAf,UACE,qBACEI,IAAKC,EACLL,UAAU,+BACVM,IAAI,wBAEN,uCACA,uDAEF,qBAAKN,UAAU,aAAf,SACE,qBACEA,UAAU,oBACVI,IAAKhB,EACLkB,IAAK,wBAUf,yBAASN,UAAU,QAAnB,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,uDAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBACEA,UAAU,kBACVI,IAAKL,EAAMqC,cAAchD,MACzBkB,IAAG,UAAKP,EAAMqC,cAAc/C,KAAzB,mBAIP,sBAAKW,UAAU,cAAf,UACE,qBACEI,IAAKC,EACLL,UAAU,aACVM,IAAI,wBAEN,6BAAKP,EAAMqC,cAAc/C,OACzB,8BACE,sBAAMW,UAAU,wBAAhB,sBACA,+BAAOD,EAAMqC,cAAc1C,YAE7B,8BACE,sBAAMM,UAAU,wBAAhB,uBACA,+BAAOD,EAAMqC,cAAc9C,YAE7B,8BACE,sBAAMU,UAAU,wBAAhB,sBACA,+BAAOD,EAAMqC,cAAc5C,YAE7B,8BACE,sBAAMQ,UAAU,wBAAhB,wBACA,+BAAOD,EAAMqC,cAAcxC,SAAS+C,YAEtC,cAAC,EAAD,OAEF,cAAC,IAAD,CAAMR,GAAG,IAAT,SACE,sBAAMnC,UAAU,8GChFf,EANH,SAACgB,GACX,IAAMiC,EAAmBC,aAAaC,QAAQnC,GAC9C,OAAOoC,KAAKC,MAAMJ,IAIL,EAVH,SAACjC,EAAKC,GAChBiC,aAAaI,QAAQtC,EAAKoC,KAAKG,UAAUtC,KCqJ5BuC,EAhIH,WAAM,MAEQC,mBAAS,IAFjB,mBAET1E,EAFS,KAEH2E,EAFG,OAGcD,oBAAS,GAHvB,mBAGTxB,EAHS,KAGA0B,EAHA,OAIQF,mBAASP,EAAiB,SAAW,IAJ7C,mBAIT7D,EAJS,KAIHuE,EAJG,OAKYH,mBAASP,EAAiB,WAAa,OALnD,mBAKT5D,EALS,KAKDuE,EALC,OAMcJ,mBAASP,EAAiB,YAAc,IANtD,mBAMTvB,EANS,KAMAmC,EANA,OAOsBL,mBACpCP,EAAiB,iBAAkB,GARrB,mBAOTa,EAPS,KAOIC,EAPJ,KAahBC,qBAAU,WACRvF,IACGE,MAAK,SAACG,GAAD,OAAU2E,EAAQ3E,MACvBH,MAAK,kBAAM+E,GAAW,QACxB,IAEHM,qBAAU,WACRf,EAAiB,OAAQ7D,GACzB6D,EAAiB,SAAU5D,GAC3B4D,EAAiB,UAAWvB,GAC5BuB,EAAiB,cAAea,MAIlC,IAAMhD,EAAe,SAACmD,GACpB,GAAwB,SAApBA,EAAYlD,IACd4C,EAAQM,EAAYjD,YACf,GAAwB,WAApBiD,EAAYlD,IACrB6C,EAAUK,EAAYjD,YACjB,GAAwB,WAApBiD,EAAYlD,IAAkB,CAEvC,IAAMmD,EAAcxC,EAAQyC,QAAQF,EAAYjD,OAChD,IAAqB,IAAjBkD,EACFL,EAAW,GAAD,mBAAKnC,GAAL,CAAcuC,EAAYjD,aAC/B,CAEL,IAAMoD,EAAU,YAAO1C,GACvB0C,EAAWC,OAAOH,EAAa,GAC/BL,EAAWO,MAOXE,EAAqBxF,EACxByF,QAAO,SAACtF,GACP,OAAOA,EAAUG,KAAK8B,cAAcS,SAASvC,MAG9CoF,MAAK,SAACC,EAAYC,GAAb,OACJD,EAAWrF,KAAOsF,EAAWtF,KACzB,EACAqF,EAAWrF,KAAOsF,EAAWtF,MAC5B,EACD,KAGLmF,QAAO,SAACtF,GACP,MAAkB,QAAXI,GAA0BJ,EAAUI,SAAWA,KAEvDkF,QAAO,SAACtF,GACP,OAA0B,IAAnByC,EAAQgB,QAAsBhB,EAAQC,SAAS1C,EAAUM,WAI9DoF,EAAmB,WACvB,IAAMC,EAAe9F,EAAKE,KAAI,SAACC,GAAD,OAAeA,EAAUM,UACjDmC,EAAU,IAAImD,IAAID,GACxB,OAAOE,MAAMC,KAAKrD,IAIdnB,EAAc,WAClBkD,EAAQ3E,GACR6E,EAAQ,IACRC,EAAU,OACVC,EAAW,KA6Bb,OACE,qBAAK9D,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,IAAlB,SAEE,qCACE,cAAC,EAAD,CAAQhF,UAxBA,WAChB8D,GAAgBD,MAwBR,cAAC,EAAD,CAAS9B,QAASA,IAnBnB8B,EACL,cAAC,EAAD,CACEhD,aAAcA,EACdP,YAAaA,EACbnB,KAAMA,EACNC,OAAQA,EACRkC,cAAeoD,IACfjD,QAASA,IAET,KAYI,cAAC,EAAD,CAAec,eAAgB8B,IAC/B,cAAC,EAAD,SAIJ,cAAC,IAAD,CAAOW,KAAK,iBAAiBC,OAxCL,SAACpF,GAC7B,IAAMqF,EAAmBC,SAAStF,EAAMuF,MAAMC,OAAOpG,IAC/CqG,EAAiBzG,EAAK0G,MAAK,SAACvG,GAChC,OAAOA,EAAUC,KAAOiG,KAE1B,OAAO,cAAC,EAAD,CAAiBhD,cAAeoD,a,eCxG3CE,EAASP,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.9241c529.chunk.js","sourcesContent":["//call to api. First filter to get why we want, with more concrete routes of properties\r\nconst getDataFromApi = () => {\r\n  return fetch('//rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          specie: character.species,\r\n          planet: character.location.name,\r\n          status: character.status,\r\n          gender: character.gender,\r\n          episodes: character.episode,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import '../../stylesSheets/header/WelcomeBtn.scss';\r\n\r\nconst WelcomeBtn = (props) => {\r\n  //listener to pass information by props to upper component\r\n  const handleBtn = () => {\r\n    props.handleBtn();\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"header__btn animate__animated  animate__pulse animate__infinite\"\r\n      onClick={handleBtn}\r\n    >\r\n      Click to search\r\n    </button>\r\n  );\r\n};\r\nexport default WelcomeBtn;\r\n","//styles\r\nimport '../../stylesSheets/header/Header.scss';\r\n\r\n//imported image\r\nimport logo from '../../images/logo.png';\r\n\r\n//importe component\r\nimport WelcomeBtn from './WelcomeBtn';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img\r\n        src={logo}\r\n        className=\"logo animate__animated animate__flip\"\r\n        alt=\"logo Rick and Morty\"\r\n      />\r\n      <WelcomeBtn handleBtn={props.handleBtn} />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","//Styles\r\nimport '../stylesSheets/ResetButton.scss';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst ResetButton = (props) => {\r\n  //listener on click and pass the information by props to upper component, in this case to App (contains useState needed)\r\n  const handleReset = () => {\r\n    props.handleReset();\r\n  };\r\n  return (\r\n    <span\r\n      className=\"icon iconInput fas fa-undo animate__animated animate__pulse animate__infinite\"\r\n      onClick={handleReset}\r\n    ></span>\r\n  );\r\n};\r\n\r\nexport default ResetButton;\r\n","//Styles\r\nimport '../../stylesSheets/filters/FilterInput.scss';\r\n\r\n//proptypes\r\nimport PropTypes from 'prop-types';\r\n\r\n//imported component\r\nimport ResetButton from '../ResetButton';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst FilterInput = (props) => {\r\n  //listener to get key and value info when user write in\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: 'name',\r\n      value: ev.target.value.toUpperCase(), //apply uppercase to compare the searching introduced with the characterCard info (array method applied in both)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <label className=\"form__label\" htmlFor=\"searchField\">\r\n      <ResetButton handleReset={props.handleReset} />\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        name=\"searchField\"\r\n        id=\"searchField\"\r\n        placeholder=\"write a character name\"\r\n        onChange={handleChange}\r\n        value={props.name}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\nFilterInput.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default FilterInput;\r\n","//styles\r\nimport '../../stylesSheets/filters/FilterSpecies.scss';\r\n//proptypes\r\nimport PropTypes from 'prop-types';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst FilterSpecies = (props) => {\r\n  //function that listens every change in input and by lifting pass the information tu upper component.\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: 'specie',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label className=\"specie__title\">Species:</label>\r\n      <select\r\n        className=\"specie__input\"\r\n        name=\"specie\"\r\n        id=\"specie\"\r\n        onChange={handleChange}\r\n        value={props.specie}\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"Alien\">Alien</option>\r\n        <option value=\"Human\">Human</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\n//proptypes\r\nFilterSpecies.propTypes = {\r\n  specie: PropTypes.string,\r\n};\r\n\r\nexport default FilterSpecies;\r\n","//styles\r\nimport '../../stylesSheets/filters/FilterPlanets.scss';\r\n\r\n//propTypes\r\nimport PropTypes from 'prop-types';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst FilterPlanets = (props) => {\r\n  //lifing function to get key and value of the property 'planet'\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: 'planet',\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n\r\n  //variable that contains, after travels along with an array method lifting by props, each single element <li> with a label and checkbox input.\r\n  const planetsList = props.planetOptions.map((planet, index) => {\r\n    return (\r\n      <li key={index} className=\"checkBox\">\r\n        <label className=\"labelCheck\">\r\n          <input\r\n            className=\"inputCheck\"\r\n            type=\"checkbox\"\r\n            name=\"planet\"\r\n            value={planet}\r\n            checked={props.planets.includes(planet)}\r\n            onChange={handleChange}\r\n          />\r\n          {planet}\r\n        </label>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  //render a list with all items icluded in variable {planetsList}\r\n  return (\r\n    <fieldset className=\"checkContainer\">\r\n      <label className=\"checkTitle\" htmlFor=\"planet\">\r\n        Select Character by planet:\r\n      </label>\r\n      <ul className=\"planetList\">{planetsList}</ul>\r\n    </fieldset>\r\n  );\r\n};\r\n\r\n//propTypes\r\nFilterPlanets.propTypes = {\r\n  planets: PropTypes.array.isRequired,\r\n};\r\nexport default FilterPlanets;\r\n","//styles\r\nimport '../../stylesSheets/filters/Filters.scss';\r\n\r\n//proptypes\r\nimport PropTypes from 'prop-types';\r\n\r\n//importe components\r\nimport FilterInput from './FilterInput';\r\nimport FilterSpecies from './FilterSpecies';\r\nimport FilterPlanets from './FilterPlanets';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst Filters = (props) => {\r\n  //function to avoid form default sending\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section className=\"app__filterSection animate__animated animate__fadeInDown\">\r\n      <form onSubmit={handleSubmit} className=\"formContainer\">\r\n        <fieldset className=\"formContainer__wrapper\">\r\n          <FilterInput\r\n            handleFilter={props.handleFilter}\r\n            handleReset={props.handleReset}\r\n            name={props.name}\r\n          />\r\n          <FilterSpecies\r\n            handleFilter={props.handleFilter}\r\n            specie={props.specie}\r\n          />\r\n        </fieldset>\r\n        <FilterPlanets\r\n          handleFilter={props.handleFilter}\r\n          planetOptions={props.planetOptions}\r\n          planets={props.planets}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\n//propTypes\r\nFilters.propTypes = {\r\n  handleFilter: PropTypes.func,\r\n  handleReset: PropTypes.func,\r\n  name: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  planetOptions: PropTypes.array,\r\n  planets: PropTypes.array,\r\n};\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/Loading2.657f57d4.gif\";","//styles\r\nimport '../stylesSheets/Loading.scss';\r\n//react\r\nimport React from 'react';\r\n//imported image\r\nimport image from '../images/Loading2.gif';\r\n\r\nconst Loading = (props) => {\r\n  if (props.loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <img className=\"loadingImg\" src={image} alt=\"Loading logo\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Loading;\r\n","//styles\r\nimport '../../stylesSheets/characters/CharacterCard.scss';\r\n\r\n//Proptypes\r\nimport PropTypes from 'prop-types';\r\n\r\n//react\r\nimport { Link } from 'react-router-dom';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst CharacterCard = (props) => {\r\n  //function to get the status and render a representative icon\r\n  const getDeadOrAliveClass = () => {\r\n    if (props.characterInfo.status === 'Alive') {\r\n      return 'fa-heartbeat animate__heartBeat';\r\n    } else if (props.characterInfo.status === 'Dead') {\r\n      return 'fa-skull animate__swing';\r\n    } else {\r\n      return 'fa-question animate__rubberBand';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {/* the complete card is a link to click on it */}\r\n      <Link className=\"link card\" to={`/character/${props.characterInfo.id}`}>\r\n        <div className=\"card__container-img\">\r\n          <img\r\n            className=\"card__img\"\r\n            src={props.characterInfo.image}\r\n            alt={`${props.characterInfo.name}'s portrait`}\r\n          />\r\n        </div>\r\n        <div className=\"card__text\">\r\n          <h3 className=\"card__text-title\">{props.characterInfo.name}</h3>\r\n          <p className=\"card__text-paragraph1\">\r\n            {props.characterInfo.specie}\r\n            <span className=\"card__text-paragraph3\">\r\n              <i\r\n                className={`fas animate__animated animate__infinite ${getDeadOrAliveClass()}`} //call the function to render the resulting class\r\n              />\r\n            </span>\r\n          </p>\r\n          <p className=\"card__text-paragraph2\">{props.characterInfo.gender}</p>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\n//propTypes\r\nCharacterCard.propTypes = {\r\n  characterInfo: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    gender: PropTypes.string,\r\n    specie: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/oops.8c96e4f6.gif\";","//styles\r\nimport '../../stylesSheets/characters/NotFoundCharacter.scss';\r\n//react\r\nimport React from 'react';\r\n\r\n//imported image\r\nimport imageOops from '../../images/oops.gif';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst NotFoundCharacter = () => {\r\n  return (\r\n    <li className=\"error\">\r\n      <img src={imageOops} className=\"error__image image1\" alt=\"Oops\" />\r\n      <p className=\"error__text\">\r\n        Ooops!! Are you sure this character exists? Please try another search.\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NotFoundCharacter;\r\n","//styles\r\nimport '../../stylesSheets/characters/CharacterList.scss';\r\n\r\n//propTypes\r\nimport PropTypes from 'prop-types';\r\n\r\n//imported components\r\nimport CharacterCard from './CharacterCard';\r\nimport NotFoundCharacter from './NotFoundCharacter';\r\n\r\n//FUNCTINAL COMPONENT\r\nconst CharacterList = (props) => {\r\n  //array method to get key and information of each character\r\n  const charactersList = props.charactersInfo.map((card) => {\r\n    return (\r\n      <CharacterCard\r\n        className=\"characterCard\"\r\n        key={card.id}\r\n        characterInfo={card}\r\n      />\r\n    );\r\n  });\r\n  //condition to render a \"try again\" message in case the searchin name inserted at the inputs were not found\r\n  if (charactersList.length === 0) {\r\n    return <NotFoundCharacter />;\r\n  }\r\n  return (\r\n    <main className=\"app__main\">\r\n      <ul className=\"charactersList animate__animated animate__zoomIn\">\r\n        {charactersList}\r\n      </ul>\r\n    </main>\r\n  );\r\n};\r\n\r\n//propTypes\r\nCharacterList.propTypes = {\r\n  characterInfo: PropTypes.array,\r\n};\r\n\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/CatNoWay.37d34f2e.gif\";","//styles\r\nimport '../stylesSheets/Footer.scss';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst Footer = () => {\r\n  return (\r\n    <section className=\"Footer\">\r\n      <a\r\n        className=\"\"\r\n        href=\"https://github.com/Sagramielgo\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <h5 className=\"copy animate__animated animate__headShake animate__infinite\">\r\n          By #Git Funtastic &nbsp;\r\n          <span>\r\n            <i className=\"fas fa-paw \"></i>\r\n          </span>\r\n          &nbsp;2021\r\n        </h5>\r\n      </a>\r\n    </section>\r\n  );\r\n};\r\nexport default Footer;\r\n","//imported styles\r\nimport '../../stylesSheets/characters/CharacterDetail.scss';\r\n\r\n//propTypes\r\nimport PropTypes from 'prop-types';\r\n\r\n//react\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//imported images\r\nimport image from '../../images/CatNoWay.gif';\r\nimport logo from '../../images/logo.png';\r\n\r\n//imported components\r\nimport Footer from '../Footer';\r\n\r\n//FUNCTIONAL COMPONENT\r\nconst CharacterDetail = (props) => {\r\n  //condition to render error-card in case the character searched in the browser were not found\r\n  if (props.characterInfo === undefined) {\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal__dialog\">\r\n          <div className=\"modal__content animate__animated animate__rubberBand\">\r\n            <header className=\"modal__header\">\r\n              <Link to=\"/\">\r\n                <span className=\"modal__close icon iconError fas fa-undo animate__animated animate__heartBeat animate__infinite\"></span>\r\n              </Link>\r\n            </header>\r\n            <div className=\"modal__text--error\">\r\n              <img\r\n                src={logo}\r\n                className=\"logoDetail logoDetail--error\"\r\n                alt=\"logo Rick and Morty\"\r\n              />\r\n              <p>Error:</p>\r\n              <p>Character not found</p>\r\n            </div>\r\n            <div className=\"modal__img\">\r\n              <img\r\n                className=\"modal__img--error\"\r\n                src={image}\r\n                alt={'Cat no way'}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    //render a card with more details of the selected character\r\n    return (\r\n      <article className=\"modal\">\r\n        <div className=\"modal__dialog\">\r\n          <div className=\"modal__content animate__animated animate__rubberBand\">\r\n            <div className=\"modal__img\">\r\n              <img\r\n                className=\"modal__img--src\"\r\n                src={props.characterInfo.image}\r\n                alt={`${props.characterInfo.name}'s portrait`}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal__text\">\r\n              <img\r\n                src={logo}\r\n                className=\"logoDetail\"\r\n                alt=\"logo Rick and Morty\"\r\n              />\r\n              <h2>{props.characterInfo.name}</h2>\r\n              <p>\r\n                <span className=\"modal__text--property\">Status: </span>\r\n                <span>{props.characterInfo.status}</span>\r\n              </p>\r\n              <p>\r\n                <span className=\"modal__text--property\">Species: </span>\r\n                <span>{props.characterInfo.specie}</span>\r\n              </p>\r\n              <p>\r\n                <span className=\"modal__text--property\">Origin: </span>\r\n                <span>{props.characterInfo.planet}</span>\r\n              </p>\r\n              <p>\r\n                <span className=\"modal__text--property\">Episodes: </span>\r\n                <span>{props.characterInfo.episodes.length}</span>\r\n              </p>\r\n              <Footer />\r\n            </div>\r\n            <Link to=\"/\">\r\n              <span className=\"modal__close icon iconDetail fas fa-undo animate__animated animate__heartBeat animate__infinite\"></span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n};\r\n\r\n//propTypes\r\nCharacterDetail.propTypes = { characterInfo: PropTypes.object };\r\n\r\nexport default CharacterDetail;\r\n","const set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst get = (key) => {\r\n  const localStorageData = localStorage.getItem(key);\r\n  return JSON.parse(localStorageData);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  get: get,\r\n  set: set,\r\n};\r\n","//styles\nimport '../stylesSheets/App.scss';\n\n//imported component that calls to API\nimport getDataFromApi from './services/Api';\n\n//react to keep usetates and apply life-cycle\nimport React, { useState, useEffect } from 'react';\n\n//imported from react to get different pathlinks in a SPA\nimport { Route, Switch } from 'react-router-dom';\n\n//imported components\nimport Header from './header/Header';\nimport Filters from './filters/Filters';\nimport Loading from './Loading';\nimport CharacterList from './characters/CharacterList';\nimport CharacterDetail from './characters/CharacterDetail';\nimport Footer from './Footer';\nimport localStorage from './services/localStorage';\n\n//FUNCTIONAL COMPONENT\nconst App = () => {\n  //states to control components content HOOKS\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [name, setName] = useState(localStorage.get('name') || '');\n  const [specie, setSpecie] = useState(localStorage.get('specie') || 'all');\n  const [planets, setPlanets] = useState(localStorage.get('planets') || []);\n  const [showFilters, setShowFilters] = useState(\n    localStorage.get('showFilters') || false\n  );\n\n  /*   \n  Update data calling to API. Loading is false when promise completes */\n  useEffect(() => {\n    getDataFromApi()\n      .then((data) => setData(data))\n      .then(() => setLoading(false));\n  }, []); //empty array to avoid infinite renderings\n\n  useEffect(() => {\n    localStorage.set('name', name);\n    localStorage.set('specie', specie);\n    localStorage.set('planets', planets);\n    localStorage.set('showFilters', showFilters);\n  });\n\n  //function received by props to register inputchanges and update usetate\n  const handleFilter = (inputChange) => {\n    if (inputChange.key === 'name') {\n      setName(inputChange.value);\n    } else if (inputChange.key === 'specie') {\n      setSpecie(inputChange.value);\n    } else if (inputChange.key === 'planet') {\n      //travels along the array to get key position to compare and add to the array those which aren't there\n      const indexPlanet = planets.indexOf(inputChange.value);\n      if (indexPlanet === -1) {\n        setPlanets([...planets, inputChange.value]);\n      } else {\n        //create a new array to aply splice method in order to remove those which are already in\n        const newPlanets = [...planets];\n        newPlanets.splice(indexPlanet, 1);\n        setPlanets(newPlanets);\n      }\n    }\n  };\n\n  //Filter the search by comparing the input info whith the data got from API\n\n  const filteredCharacters = data\n    .filter((character) => {\n      return character.name.toUpperCase().includes(name);\n    })\n    //array method for alphabetical order\n    .sort((characterA, characterB) =>\n      characterA.name > characterB.name\n        ? 1\n        : characterA.name < characterB.name\n        ? -1\n        : 0\n    )\n\n    .filter((character) => {\n      return specie === 'all' ? true : character.specie === specie;\n    })\n    .filter((character) => {\n      return planets.length === 0 ? true : planets.includes(character.planet);\n    });\n\n  //function received by props to render not duplicated planets in checkbox\n  const getPlanetOptions = () => {\n    const planetsArray = data.map((character) => character.planet);\n    const planets = new Set(planetsArray);\n    return Array.from(planets);\n  };\n\n  //function received by props to reset info by updating useState\n  const handleReset = () => {\n    setData(data);\n    setName('');\n    setSpecie('all');\n    setPlanets([]);\n  };\n\n  const renderCharacterDetail = (props) => {\n    const clickedCharacter = parseInt(props.match.params.id);\n    const foundCharacter = data.find((character) => {\n      return character.id === clickedCharacter;\n    });\n    return <CharacterDetail characterInfo={foundCharacter} />;\n  };\n  //function to hide or Show filters section\n  const handleBtn = () => {\n    setShowFilters(!showFilters);\n  };\n\n  //render the filtersection when the state showFilters is true, and doesn't when is false\n  const renderFilters = () => {\n    return showFilters ? (\n      <Filters\n        handleFilter={handleFilter}\n        handleReset={handleReset}\n        name={name}\n        specie={specie}\n        planetOptions={getPlanetOptions()}\n        planets={planets}\n      />\n    ) : null;\n  };\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\">\n          {/*  to go strictly home */}\n          <>\n            <Header handleBtn={handleBtn} />\n            <Loading loading={loading} />\n            {renderFilters()}\n            <CharacterList charactersInfo={filteredCharacters} />\n            <Footer />\n          </>\n        </Route>\n        {/*  dinamic route to go to links in a SPA and share link in browser */}\n        <Route path=\"/character/:id\" render={renderCharacterDetail} />\n      </Switch>\n    </div>\n  );\n};\nexport default App;\n","import './stylesSheets/index.scss';\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}